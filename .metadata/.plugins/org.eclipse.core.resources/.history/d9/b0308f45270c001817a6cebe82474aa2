package edu.casetools.icase.mreasoner.gui;


import java.util.Vector;

import edu.casetools.icase.mreasoner.configs.data.MConfigs;
import edu.casetools.icase.mreasoner.gui.controller.Controller;
import edu.casetools.icase.mreasoner.gui.model.Model;
import edu.casetools.icase.mreasoner.gui.view.View;
import edu.casetools.icase.mreasoner.myactuators.LampActuator;
import edu.casetools.icase.mreasoner.myactuators.LampConfigs;
import edu.casetools.icase.mreasoner.myactuators.OutsideActuator;
import edu.casetools.icase.mreasoner.myactuators.OutsideConfigs;
import edu.casetools.icase.mreasoner.actuators.device.Actuator;

public class Main {
	
	public static void main(String[] args) {

			Vector<Actuator> actuators = new Vector<Actuator>();
			
		 //Add to the actuators vector your own list of actuators.
			LampConfigs lampConfigs = new LampConfigs("lampOn");
			LampConfigs microwaveCong = new LampConfigs("microwave");
			LampConfigs radioCong = new LampConfigs("radio");
			OutsideConfigs wanderingConfigs = new OutsideConfigs("wandering");
			OutsideConfigs noEatConfig = new OutsideConfigs("noEat");
			
			LampActuator lampactuator = new LampActuator(lampConfigs);
			LampActuator Radioactuator = new LampActuator(radioCong);
			LampActuator microwaveAct = new LampActuator(microwaveCong);
			OutsideActuator wandering = new OutsideActuator(wanderingConfigs);
			OutsideActuator noEat = new OutsideActuator(noEatConfig);
			
			actuators.add(wandering);
			actuators.add(noEat);
			actuators.add(lampactuator);
			actuators.add(Radioactuator);
			actuators.add(microwaveAct);
					
			MConfigs configs = new MConfigs();
			
			Model model = new Model(configs.getDBConfigs(), actuators);
			View view = new View(configs);
			Controller controller = new Controller(view,model,configs.getFilesConfigs());
			
			try {
				Thread.sleep(400);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			controller.setDividersAtDefaultLocation();

		
	}

}
